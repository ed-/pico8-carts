pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
-- tunein
-- slumberheart

function _init()
  cls()
  _mode = 0
  _frame = 0
  game = new_game()
end

function _update()
  _frame = (_frame + 1) % 30
  if _mode == 0 then
    update(game)
  else
  end
end

function _draw()
  cls()
  if _mode == 0 then
    draw(game)
  else
  end
end

function update(something)
  something:update()
end

function draw(something)
  something:draw()
end
-->8
-- game

function new_game()

  local game = {} 
  
  game.update = function(self)
    if btnp(0) then
      if self.lock.locked then
        self:left()
      end
    end
    if btnp(1) then
      if self.lock.locked then
        self:right()
      end
    end
    if btnp(2) then
      self:up()
    end
    if btnp(3) then
      self:down()
    end
    
    if btnp(4) or btnp(5) then
      if not self.lock.locked then
        self:reset()
      end
    end

    self.sum_tuner:sum(self.tuners)
    if self:won() then
      self.lock:unlock()
    end
  end
  
  game.left = function(self)
    self.tuners[self.selected]:left()
    sfx(2)
  end

  game.right = function(self)
    self.tuners[self.selected]:right()
    sfx(2)
  end
  
  game.up = function(self)
    self.selected = max(self.selected - 1, 1)
    sfx(1)
  end

  game.down = function(self)
    self.selected = min(self.selected + 1, 3)
    sfx(1)
  end

  game.draw = function(self)
    spr(4, 8, (self.selected * 8) + 8)
    spr(5, 112, (self.selected * 8) + 8)
    foreach(game.tuners, draw)
    draw(game.sum_tuner)
    draw(game.goal_tuner)
    draw(game.lock)
  end
  
  game.won = function(self)
    for i=1,#(self.sum_tuner.vals) do
      a=self.sum_tuner.vals[i]
      b=self.goal_tuner.vals[i]
      if a != b then
        return false
      end
    end
    return true
  end
  
  game.reset = function(self)
    self.selected = 1
    self.tuners = {}
    sz = 10
  
    add(self.tuners, new_tuner(16, 16, sz,  8))
    add(self.tuners, new_tuner(16, 24, sz, 11))
    add(self.tuners, new_tuner(16, 32, sz, 12))
  
    self.goal_tuner = new_sum_tuner(16, 80, sz, 7)
  
    self.goal_tuner:sum(game.tuners)
  
    for i=1,3 do
      j = rnd(10)
      for k=1,j do
        self.tuners[i]:right()
      end
    end
    
    self.sum_tuner = new_sum_tuner(16, 48, sz, 2)
    self.lock = new_locklight(24, 112)
    self.lock:lock()
  end
  
  game:reset()
  
  return game
end
-->8
-- tuner


function new_tuner(x, y, s, c)
  z = {}
  
  z.x = x
  z.y = y
  z.c = c
  
  z.vals = {}
  for i=1,s do
    add(z.vals, flr(rnd(3)))
  end
  
  z.left = function(self)
    t = self.vals[1]
    for i=1,#(self.vals)-1 do
      self.vals[i] = self.vals[i+1]
    end
    self.vals[#self.vals] = t
  end

  z.right = function(self)
    t = self.vals[#self.vals]
    for i=#(self.vals),2,-1 do
      self.vals[i] = self.vals[i-1]
    end
    self.vals[1] = t
  end

  z.draw = function(self)
    pal(6, self.c)
    for i=1,#(self.vals) do
      v = self.vals[i]
      x = i * 8
      spr(1 + v, self.x + x, self.y)
    end
    pal()
  end
  
  return z
end

function new_sum_tuner(x, y, s, c)
  z = {}
  
  z.x = x
  z.y = y
  z.c = c
  
  z.vals = {}
  for i=1,s do
    add(z.vals, 0)
  end

  z.sum = function(self, tuners)
    for i=1,#(self.vals) do
      self.vals[i] = 0
    end
    for j=1,#tuners do
      tuner = tuners[j]
      for i=1,#(tuner.vals) do
        self.vals[i] += tuner.vals[i]
      end
    end
  end

  z.draw = function(self)
    pal(6, self.c)
    for i=1,#(self.vals) do
      v = self.vals[i]
      x = i * 8
      spr(17 + v, self.x + x, self.y)
      spr(33 + v, self.x + x, self.y + 8)
      spr(49 + v, self.x + x, self.y + 16)
    end
    pal()
  end
  
  return z
end
-->8
--locked-open

function new_locklight(x, y)
  z = {}
  z.x = x
  z.y = y
  z.locked = true
  
  z.draw = function(self)
    if self.locked then
      pal(11,  0)
      pal( 3,  5) 
    else
      pal( 8,  0)
      pal( 2,  5)
    end
    spr(10, self.x, self.y, 4, 1)
    spr(26, self.x + 48, self.y, 4, 1)
    pal()
  end
  
  z.lock = function(self)
    sfx(4)
    self.locked = true
  end
  
  z.unlock = function(self)
    if self.locked then
      sfx(3)
    end
    self.locked = false
  end
  
  return z
end
__gfx__
00000000000000000000000000000000000000000000000006666660000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000006666660066000000000066060000006000000000000000000000000008888888888888888888888888888000000000000000000
00700700000000000000000006666660000660000006600060000006000000000000000000000000008882888828882882828222822888000000000000000000
00077000000000000000000000000000000006600660000060000006000000000000000000000000008882888282828282828288828288000000000000000000
00077000000000000666666006666660000006600660000060000006000000000000000000000000008882888282828882288228828288000000000000000000
00700700000000000666666006666660000660000006600060000006000000000000000000000000008882888282828282828288828288000000000000000000
00000000000000000000000000000000066000000000066060000006000000000000000000000000008882228828882882828222822888000000000000000000
00000000555555555555555555555555000000000000000006666660000000000000000000000000008888888888888888888888888888000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000bbbbbbbbbbbbbbbbbbbbbbbbbbbb000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000bbbbbbbb3bb33bb333b3b3bbbbbb000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000bbbbbbb3b3b3b3b3bbb333bbbbbb000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000bbbbbbb3b3b33bb33bb333bbbbbb000000000000000000
0000000000000000000000000000000000000000000000000000000006666660000000000000000000bbbbbbb3b3b3bbb3bbb333bbbbbb000000000000000000
0000000000000000000000000000000000000000000000000000000006666660000000000000000000bbbbbbbb3bb3bbb333b3b3bbbbbb000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000bbbbbbbbbbbbbbbbbbbbbbbbbbbb000000000000000000
00000000000000000000000000000000000000000000000006666660066666600000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000006666660066666600000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000666666006666660066666600000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000666666006666660066666600000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000066666600666666006666660066666600000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000066666600666666006666660066666600000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000006666660066666600666666006666660066666600000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000006666660066666600666666006666660066666600000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000666666006666660066666600666666006666660066666600000000000000000000000000000000000000000000000000000000000000000
00000000000000000666666006666660066666600666666006666660066666600000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000555555555555555555555555555555555555555555555555555555550000000000000000000000000000000000000000000000000000000000000000
__sfx__
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100000c5500b5500c5500b5500c5500b5500c5500b5500c5500b5500c5500b5500c5500b5500c5500000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00010000025500455006550075500a5500b5500c5500d5500e5501055012550125501355013550135501450000000000000000000000000000000000000000000000000000000000000000000000000000000000
0001000007750097500c7500f75012750137500a7500d750107501375015750187501a7501d75017750197501b7501e750217502375025750287502a750207502375026750297502d7503075033750367503a750
000200002f7502b75025750217501c7501975016750107500b750087500675000000207001c70018700147000f7000b700087000470003700000000d7000c7000a70009700087000670005700037000170001700
